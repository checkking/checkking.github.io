<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://checkking.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/checkking&#34;&gt;checkking&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Fri, 01 Jan 2016 21:07:16 +0800</lastBuildDate>
    
	<atom:link href="https://checkking.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43;前向声明</title>
      <link>https://checkking.github.io/post/lang/cpp1/</link>
      <pubDate>Fri, 01 Jan 2016 21:07:16 +0800</pubDate>
      
      <guid>https://checkking.github.io/post/lang/cpp1/</guid>
      <description>为什么需要前向声明? 编译器确保在文件中使用的函数没有拼写错误或参数个数不对，因此它坚持要在使用函数之前要看到它的声明， 也就是为了方便编译器生成目标代码，不至于编译成功，运行的时候却失败。比如下面的例子：
// file func.cpp #include &amp;lt;stdio.h&amp;gt; void func(int a, float b) { (void)a; (void)b; printf(&amp;quot;func(int a, float b)\n&amp;quot;); }  // file main.cpp #include &amp;lt;stdio.h&amp;gt; void func(int a, int b) { (void)a; (void)b; printf(&amp;quot;func(int a, int b)\n&amp;quot;); } // void func(int a, float b); int main(int argc, char** argv) { func(1, 3.0f); return 0; }  我们本意想调用void func(int a, float b)，但是程序执行的时候却调用了void func(int a, int b)，这种错误 很难发现，因为在编译的时候没有报错。
如果我们把main.cpp改成下面的：</description>
    </item>
    
  </channel>
</rss>